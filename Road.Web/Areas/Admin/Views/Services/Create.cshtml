@model Road.Core.Models.Service

    @{
        ViewBag.Title = "سرویس ها";
    }
    <input type="hidden" id="nav_active" value="services">
    <input type="hidden" id="nav_item_active" value="services">
    @{
        if (ViewBag.Message != null)
        {
            <div class="alert alert-danger">
                <strong>خطا!</strong> @ViewBag.Message
            </div>
        }
    }
    <div class="col-lg-12">
        <div class="card card-custom gutter-b">
            <div class="card-header">
                <h3 class="card-title">
                    افزودن سرویس
                </h3>
            </div>
            @using (Html.BeginForm("Create", "Services", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()

                <div class="card-body">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.Title, new { })
                        <div class="col-md-5">
                            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control " } })
                            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "form-text text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.ShortDescription, new { })
                        <div class="col-md-5">
                            @Html.EditorFor(model => model.ShortDescription, new { htmlAttributes = new { @class = "form-control " } })
                            @Html.ValidationMessageFor(model => model.ShortDescription, "", new { @class = "form-text text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-label">تصویر</label>
                        <div class="col-lg-6 col-md-12 col-sm-12">
                            <div class="image-input image-input-outline" id="service-image">
                                <div class="image-input-wrapper" style="background-image: url(assets/media/users/100_1.jpg)"></div>

                                <label class="btn btn-xs btn-icon btn-circle btn-white btn-hover-text-primary btn-shadow" data-action="change" data-toggle="tooltip" title="" data-original-title="آپلود تصویر">
                                    <i class="fa fa-pen icon-sm text-muted"></i>
                                    <input type="file" name="ServiceImage" accept=".png, .jpg, .jpeg" />
                                    <input type="hidden" name="service_image_remove" />
                                </label>

                                <span class="btn btn-xs btn-icon btn-circle btn-white btn-hover-text-primary btn-shadow" data-action="cancel" data-toggle="tooltip" title="حذف تصویر">
                                    <i class="ki ki-bold-close icon-xs text-muted"></i>
                                </span>
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Description, new { })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control " } })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "form-text text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Address, new { })
                        <div class="col-md-5">
                            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control " } })
                            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "form-text text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Phone, new { })
                        <div class="col-md-5">
                            @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control " } })
                            @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "form-text text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Email, new { })
                        <div class="col-md-5">
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control " } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "form-text text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="ServiceFile">فایل سرویس</label>
                        <div class="col-md-5">
                            <input type="file" id="ServiceFile" name="ServiceFile"/>
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.FileInfo, new { })
                        <div class="col-md-5">
                            @Html.EditorFor(model => model.FileInfo, new { htmlAttributes = new { @class = "form-control " } })
                            @Html.ValidationMessageFor(model => model.FileInfo, "", new { @class = "form-text text-danger" })
                        </div>
                    </div>
                </div>
                <div class="card-footer">
                    <a href="@Url.Action("Index")" class="btn btn-secondary">انصراف</a>
                    <input type="submit" value="ثبت" class="btn btn-primary mr-2" />
                </div>
            }
        </div>
    </div>
    <style>
        .image-input .image-input-wrapper {
            width: 200px;
        }
    </style>
    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
        <script src="/ckeditor/ckeditor.js"></script>
        <script src="/ckeditor/adapters/jquery.js"></script>
        <script>
            $(function () {
                $('#Description').ckeditor();

            });
            new KTImageInput('service-image');
        </script>
    }